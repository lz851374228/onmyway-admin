import B from"./CurrentPermissionMode-af2e00d1.js";import{am as v,a4 as P,_ as T}from"./index.js";import{R as F}from"./roleEnum-812e493f.js";import{A as g}from"./index-01120c5d.js";import{P as h}from"./index-dd53ef4b.js";import{d as U,e as D,a8 as a,v as k,_ as r,a9 as n,aa as e,f as s,a0 as c,E as o,a1 as d,ac as f,t as C}from"./vue-625a50e2.js";import{aL as $,aM as L,at as M}from"./antd-d44a863f.js";import"./useContentViewHeight-52d56a6c.js";import"./useWindowSizeFn-6fb3a97e.js";import"./onMountedOrActivated-6a3fbc2b.js";const N=U({components:{Alert:$,PageWrapper:h,Space:L,CurrentPermissionMode:B,Divider:M,Authority:g},setup(){const{changeRole:u,hasPermission:l}=v(),E=P();return{userStore:E,RoleEnum:F,isSuper:D(()=>E.getRoleList.includes(F.SUPER)),isTest:D(()=>E.getRoleList.includes(F.TEST)),changeRole:u,hasPermission:l}}});const V={class:"mt-4"};function w(u,l,E,W,b,I){const R=a("CurrentPermissionMode"),_=a("Alert"),t=a("a-button"),A=a("Space"),m=a("Divider"),i=a("Authority"),S=a("PageWrapper"),p=k("auth");return r(),n(S,{title:"前端权限按钮示例",contentBackground:"",contentClass:"p-4",content:"由于刷新的时候会请求用户信息接口，会根据接口重置角色信息，所以刷新后界面会恢复原样，如果不需要，可以注释 src/layout/default/index内的获取用户信息接口"},{default:e(()=>[s(R),c("p",null,[o(" 当前角色: "),c("a",null,d(u.userStore.getRoleList),1)]),s(_,{class:"mt-4",type:"info",message:"点击后请查看按钮变化","show-icon":""}),c("div",V,[o(" 权限切换(请先切换权限模式为前端角色权限模式): "),s(A,null,{default:e(()=>[s(t,{onClick:l[0]||(l[0]=y=>u.changeRole(u.RoleEnum.SUPER)),type:u.isSuper?"primary":"default"},{default:e(()=>[o(d(u.RoleEnum.SUPER),1)]),_:1},8,["type"]),s(t,{onClick:l[1]||(l[1]=y=>u.changeRole(u.RoleEnum.TEST)),type:u.isTest?"primary":"default"},{default:e(()=>[o(d(u.RoleEnum.TEST),1)]),_:1},8,["type"])]),_:1})]),s(m,null,{default:e(()=>[o("组件方式判断权限(有需要可以自行全局注册)")]),_:1}),s(i,{value:u.RoleEnum.SUPER},{default:e(()=>[s(t,{type:"primary",class:"mx-4"},{default:e(()=>[o(" 拥有super角色权限可见 ")]),_:1})]),_:1},8,["value"]),s(i,{value:u.RoleEnum.TEST},{default:e(()=>[s(t,{color:"success",class:"mx-4"},{default:e(()=>[o(" 拥有test角色权限可见 ")]),_:1})]),_:1},8,["value"]),s(i,{value:[u.RoleEnum.TEST,u.RoleEnum.SUPER]},{default:e(()=>[s(t,{color:"error",class:"mx-4"},{default:e(()=>[o(" 拥有[test,super]角色权限可见 ")]),_:1})]),_:1},8,["value"]),s(m,null,{default:e(()=>[o("函数方式方式判断权限(适用于函数内部过滤)")]),_:1}),u.hasPermission(u.RoleEnum.SUPER)?(r(),n(t,{key:0,type:"primary",class:"mx-4"},{default:e(()=>[o(" 拥有super角色权限可见 ")]),_:1})):f("",!0),u.hasPermission(u.RoleEnum.TEST)?(r(),n(t,{key:1,color:"success",class:"mx-4"},{default:e(()=>[o(" 拥有test角色权限可见 ")]),_:1})):f("",!0),u.hasPermission([u.RoleEnum.TEST,u.RoleEnum.SUPER])?(r(),n(t,{key:2,color:"error",class:"mx-4"},{default:e(()=>[o(" 拥有[test,super]角色权限可见 ")]),_:1})):f("",!0),s(m,null,{default:e(()=>[o("指令方式方式判断权限(该方式不能动态修改权限.)")]),_:1}),C((r(),n(t,{type:"primary",class:"mx-4"},{default:e(()=>[o(" 拥有super角色权限可见 ")]),_:1})),[[p,u.RoleEnum.SUPER]]),C((r(),n(t,{color:"success",class:"mx-4"},{default:e(()=>[o(" 拥有test角色权限可见 ")]),_:1})),[[p,u.RoleEnum.TEST]]),C((r(),n(t,{color:"error",class:"mx-4"},{default:e(()=>[o(" 拥有[test,super]角色权限可见 ")]),_:1})),[[p,[u.RoleEnum.TEST,u.RoleEnum.SUPER]]])]),_:1})}const Y=T(N,[["render",w],["__scopeId","data-v-e6134e80"]]);export{Y as default};
